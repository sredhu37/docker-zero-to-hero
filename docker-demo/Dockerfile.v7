# Using Args for builder and final image
ARG BUILDER_IMAGE=node:24.4.1@sha256:c7a63f857d6dc9b3780ceb1874544cc22f3e399333c82de2a46de0049e841729
ARG FINAL_IMAGE=node:24.4.1-alpine3.22@sha256:820e86612c21d0636580206d802a726f2595366e1b867e564cbc652024151e8a
# ARG FINAL_IMAGE=node:24.4.1-slim@sha256:36ae19f59c91f3303c7a648f07493fe14c4bd91320ac8d898416327bacf1bbfa

# Using Args for builder image
FROM ${BUILDER_IMAGE} AS builder

# Set env vars for production build
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

WORKDIR /app

COPY package*.json ./

RUN npm install

COPY . .

RUN npm run build

# Using Args for final image
FROM ${FINAL_IMAGE} AS final

# Set env vars for production build
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

WORKDIR /app

COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next/static ./.next/static

EXPOSE 3000

CMD ["node", "server.js"]

# docker build --file Dockerfile.v7 --tag docker-demo:v7 .
# docker run -it --rm --publish 3000:3000 docker-demo:v7
