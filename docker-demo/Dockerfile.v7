# Base image to start from.
# Stage 1 — Build the app
ARG BUILDER_IMAGE=node:24.4.1@sha256:c7a63f857d6dc9b3780ceb1874544cc22f3e399333c82de2a46de0049e841729
ARG FINAL_IMAGE=node:24.4.1-alpine3.22@sha256:820e86612c21d0636580206d802a726f2595366e1b867e564cbc652024151e8a
# ARG FINAL_IMAGE=node:24.4.1-slim@sha256:36ae19f59c91f3303c7a648f07493fe14c4bd91320ac8d898416327bacf1bbfa

FROM ${BUILDER_IMAGE} AS builder

# 1. Set env vars for production build
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Set the working directory inside the container.
WORKDIR /app

# Copy only package.json and package-lock.json first.
# This allows us to cache the npm install layer.
COPY package*.json ./

# Install dependencies
RUN npm install

# Now copy the rest of the files.
COPY . .

# Build the application for production
RUN npm run build


# Stage 2 — Run the app
FROM ${FINAL_IMAGE} AS final

# 2. Set env vars for production build
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

WORKDIR /app

# 3. Copy the standalone folder
COPY --from=builder /app/.next/standalone ./
# 4. Public assets and static files are not included by default, so we copy them manually
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next/static ./.next/static



# Document the port that the application will run on
EXPOSE 3000

# 5. Start the application
CMD ["node", "server.js"]
